# Generated by Django 5.2.7 on 2025-10-30 10:31

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='authors/')),
                ('location', models.CharField(blank=True, max_length=200)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('personal_website', models.URLField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('excerpt', models.TextField(blank=True, max_length=500)),
                ('content', models.TextField()),
                ('author', models.CharField(max_length=200)),
                ('author_avatar', models.URLField(blank=True, null=True)),
                ('author_bio', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('AI Tools', 'AI Tools'), ('Tutorials', 'Tutorials'), ('Reviews', 'Reviews'), ('Updates', 'Updates'), ('Case Studies', 'Case Studies'), ('Productivity', 'Productivity'), ('Education', 'Education')], max_length=100)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/')),
                ('views', models.IntegerField(default=0)),
                ('read_time', models.IntegerField(blank=True, help_text='Reading time in minutes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('summary', models.TextField(max_length=500)),
                ('category', models.CharField(choices=[('Product Launch', 'Product Launch'), ('Feature Update', 'Feature Update'), ('Industry News', 'Industry News'), ('Company Announcement', 'Company Announcement'), ('Research', 'Research'), ('Events', 'Events')], max_length=100)),
                ('source', models.CharField(blank=True, max_length=200)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'News Item',
                'verbose_name_plural': 'News Items',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=100)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='tools/')),
                ('brand_color', models.CharField(blank=True, default='#667eea', max_length=7)),
                ('pricing', models.CharField(choices=[('Free', 'Free'), ('Freemium', 'Freemium'), ('Paid', 'Paid'), ('Enterprise', 'Enterprise')], max_length=50)),
                ('difficulty', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=50)),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('overview', models.TextField(blank=True)),
                ('usage_guide', models.TextField(blank=True)),
                ('key_features', models.JSONField(blank=True, default=list)),
                ('pros', models.JSONField(blank=True, default=list)),
                ('cons', models.JSONField(blank=True, default=list)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('editor_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('review', models.TextField(blank=True)),
                ('users', models.CharField(blank=True, max_length=100)),
                ('is_featured', models.BooleanField(default=False)),
                ('use_cases', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Tool',
                'verbose_name_plural': 'AI Tools',
                'ordering': ['-created_at'],
            },
        ),
    ]
